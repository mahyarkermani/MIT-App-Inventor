package org.appinventor;
import com.google.appinventor.components.runtime.HandlesEventDispatching;
import com.google.appinventor.components.runtime.EventDispatcher;
import com.google.appinventor.components.runtime.Form;
import com.google.appinventor.components.runtime.Component;
import com.google.appinventor.components.runtime.Label;
import com.google.appinventor.components.runtime.TextBox;
import com.google.appinventor.components.runtime.TableArrangement;
import com.google.appinventor.components.runtime.Button;
class Screen1 extends Form implements HandlesEventDispatching {
  private Label Label2;
  private TextBox TextBox1;
  private TextBox TextBox2;
  private TableArrangement TableArrangement1;
  private Button Button4;
  private Button Button1;
  private Button Button2;
  private Button Button3;
  private Label Label1;
  protected void $define() {
    this.AboutScreen("Test for university");
    this.AlignHorizontal(3);
    this.AppName("Calculator");
    this.BackgroundColor(0xFF00FFFF);
    this.Title("Calculator");
    Label2 = new Label(this);
    Label2.BackgroundColor(0xFFFFFF00);
    Label2.FontSize(30);
    Label2.Height(-1030);
    Label2.Width(LENGTH_FILL_PARENT);
    Label2.Text("Welcome Here. This is my first app ( from MIT APP INVENTOR). You can enter two numbers, choose a math operating and see the result. Have a good time :)");
    Label2.TextColor(0xFFFF00FF);
    TextBox1 = new TextBox(this);
    TextBox1.FontSize(17);
    TextBox1.Width(LENGTH_FILL_PARENT);
    TextBox1.Hint("Enter number 1");
    TextBox1.NumbersOnly(true);
    TextBox2 = new TextBox(this);
    TextBox2.FontSize(17);
    TextBox2.Width(LENGTH_FILL_PARENT);
    TextBox2.Hint("Enter number 2");
    TextBox2.NumbersOnly(true);
    TableArrangement1 = new TableArrangement(this);
    TableArrangement1.Height(-1020);
    TableArrangement1.Width(-1050);
    Button4 = new Button(TableArrangement1);
    Button4.Column(1);
    Button4.FontSize(28);
    Button4.Height(-1010);
    Button4.Width(-1025);
    Button4.Row(0);
    Button4.Shape(1);
    Button4.Text("/");
    Button1 = new Button(TableArrangement1);
    Button1.Column(0);
    Button1.FontSize(28);
    Button1.Height(-1010);
    Button1.Width(-1025);
    Button1.Row(0);
    Button1.Shape(1);
    Button1.ShowFeedback(false);
    Button1.Text("+");
    Button2 = new Button(TableArrangement1);
    Button2.Column(1);
    Button2.FontSize(28);
    Button2.Height(-1010);
    Button2.Width(-1025);
    Button2.Row(1);
    Button2.Shape(1);
    Button2.Text("-");
    Button3 = new Button(TableArrangement1);
    Button3.Column(0);
    Button3.FontSize(28);
    Button3.Height(-1010);
    Button3.Width(-1025);
    Button3.Row(1);
    Button3.Shape(1);
    Button3.Text("*");
    Label1 = new Label(this);
    Label1.BackgroundColor(0xFF444444);
    Label1.FontSize(25);
    Label1.Width(LENGTH_FILL_PARENT);
    Label1.Text("Text for Label1");
    Label1.TextColor(0xFFFF0000);
    Label1.Visible(false);
  }
  public boolean dispatchEvent(Component component, String componentName, String eventName, Object[] params){
    return false;
  }
}